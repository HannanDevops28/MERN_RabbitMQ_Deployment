version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3.11-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  users-service:
    build: ./services/users
    container_name: users-service
    restart: always
    ports:
      - "${USERS_PORT}:5001"
    environment:
      - PORT=${USERS_PORT}
      - MONGO_URI=${USERS_URI}
      - RABBITMQ_URI=${RABBITMQ_URL}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - rabbitmq
    networks:
      - app-network

  products-service:
    build: ./services/products
    container_name: products-service
    restart: always
    ports:
      - "${PRODUCTS_PORT}:5002"
    environment:
      - PORT=${PRODUCTS_PORT}
      - MONGO_URI=${PRODUCTS_URI}
      - RABBITMQ_URI=${RABBITMQ_URL}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - rabbitmq
    networks:
      - app-network

  orders-service:
    build: ./services/orders
    container_name: orders-service
    restart: always
    ports:
      - "${ORDERS_PORT}:5003"
    environment:
      - PORT=${ORDERS_PORT}
      - MONGO_URI=${ORDERS_URI}
      - RABBITMQ_URI=${RABBITMQ_URL}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - rabbitmq
    networks:
      - app-network

  analytics-service:
    build: ./services/analytics
    container_name: analytics-service
    restart: always
    ports:
      - "${ANALYTICS_PORT}:5004"
    environment:
      - PORT=${ANALYTICS_PORT}
      - MONGO_URI=${ANALYTICS_URI}
      - NODE_ENV=${NODE_ENV}
    networks:
      - app-network

  consumer-service:
    build: ./services/consumer
    container_name: consumer-service
    restart: always
    environment:
      - RABBITMQ_URI=${RABBITMQ_URL}
      - PRODUCTS_API=http://products-service:${PRODUCTS_PORT}/products
      - ANALYTICS_URI=${ANALYTICS_URI}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      rabbitmq:
        condition: service_healthy
      products-service:
        condition: service_started
    networks:
      - app-network

  frontend:
    build: ./frontend
    container_name: frontend
    restart: always
    ports:
      - "${FRONTEND_PORT}:3000"
    environment:
      - NEXT_PUBLIC_USERS_API=http://users-service:${USERS_PORT}
      - NEXT_PUBLIC_PRODUCTS_API=http://products-service:${PRODUCTS_PORT}
      - NEXT_PUBLIC_ORDERS_API=http://orders-service:${ORDERS_PORT}
      - NEXT_PUBLIC_ANALYTICS_API=http://analytics-service:${ANALYTICS_PORT}
      - NODE_ENV=${NODE_ENV}
    depends_on:
      - users-service
      - products-service
      - orders-service
      - analytics-service
    networks:
      - app-network

volumes:
  rabbitmq_data:

networks:
  app-network:
    driver: bridge
